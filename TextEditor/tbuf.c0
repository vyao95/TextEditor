/*
 * Text buffers
 * 
 * The back end for a one-character text editor, a doubly-linked list
 * whose elements are 16-character gap buffers.
 * 
 * 15-122 Principles of Imperative Computation */

/*** Interface ***/

typedef dll_pt tbuf;

bool is_tbuf(struct dll_pt_header* B);

bool tbuf_empty(tbuf B);    /* Checks if the text buffer is empty            */

tbuf tbuf_new();            /* Creates an empty text buffer, with            */
                            /*   gap buffers of size 16                      */
void tbuf_split_pt(tbuf B); /* Splits a full point into two nodes, so that   */
                            /*    the new point is not full                  */
void tbuf_forward(tbuf B);  /* Move the cursor forward 1 char, to the right  */
void tbuf_backward(tbuf B); /* Move the cursor backward 1 char, to the left  */
void tbuf_insert(tbuf B, char c); /* Insert the char c before the cursor     */
void tbuf_delete(tbuf B);         /* Delete the character before the cursor, */
                                  /*   also deletes the point if it is empty */

/*** Implementation ***/
